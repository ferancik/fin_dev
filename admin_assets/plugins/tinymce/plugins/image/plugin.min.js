tinymce.PluginManager.add("image", function(e) {
    function t() {
        function t(e) {
            var t, i, r, l;
            t = n.find("#width")[0], i = n.find("#height")[0], r = t.value(), l = i.value(), n.find("#constrain")[0].checked() && o && a && r && l && (e.control == t ? (l = Math.round(r / o * l), i.value(l)) : (r = Math.round(l / a * r), t.value(r))), o = r, a = l
        }
        var n, i, o, a, r = e.dom,
                l = e.selection.getNode();
        o = r.getAttrib(l, "width"), a = r.getAttrib(l, "height"), "IMG" != l.nodeName || l.getAttribute("data-mce-object") ? l = null : i = {
            src: r.getAttrib(l, "src"),
            alt: r.getAttrib(l, "alt"),
            width: o,
            height: a
        }, n = e.windowManager.open({
            title: "Edit image",
            data: i,
            body: [{
                    name: "src",
                    type: "filepicker",
                    filetype: "image",
                    label: "Source",
                    rel: "KFfilebrowser",
                    autofocus: !0
                }, {
                    name: "otvorFileBrowser",
                    type: "button",
                    text: "Open File Browser (Browse Server)",
                    onclick: function() {
                        // id text elementu do ktoreho bude zapisovat
                        id_elementu =   $('.mce-container.mce-panel  input:first').attr('id');
                       
                        m = URL_FILE_MANAGER+'?elem='+id_elementu+'&type=index';
                        p = "";
                        n = 1024 || '80%';
                        o = 600 || '70%';
                        if (typeof n == 'string' && n.length > 1 && n.substr(n.length - 1, 1) == '%')
                            n = parseInt(window.screen.width * parseInt(n, 10) / 100, 10);
                        if (typeof o == 'string' && o.length > 1 && o.substr(o.length - 1, 1) == '%')
                            o = parseInt(window.screen.height * parseInt(o, 10) / 100, 10);
                        if (n < 640)
                            n = 640;
                        if (o < 420)
                            o = 420;
                        var q = parseInt((window.screen.height - o) / 2, 10),
                                r = parseInt((window.screen.width - n) / 2, 10);
                        p = (p || 'location=no,menubar=no,toolbar=no,dependent=yes,minimizable=no,modal=yes,alwaysRaised=yes,resizable=yes,scrollbars=yes') + ',width=' + n + ',height=' + o + ',top=' + q + ',left=' + r;
                        var s = window.open('', null, p, true);
                        if (!s)
                            return false;
                        try {
                            s.moveTo(r, q);
                            s.resizeTo(n, o);
                            s.focus();
                            s.location.href = m;
                        } catch (t) {
                            s = window.open(m, null, p, true);
                        }

                    },
                    label: ""

                }, {
                    name: "alt",
                    type: "textbox",
                    label: "Image description"
                }, {
                    type: "container",
                    label: "Dimensions",
                    layout: "flex",
                    direction: "row",
                    align: "center",
                    spacing: 5,
                    items: [{
                            name: "width",
                            type: "textbox",
                            maxLength: 3,
                            size: 3,
                            onchange: t
                        }, {
                            type: "label",
                            text: "x"
                        }, {
                            name: "height",
                            type: "textbox",
                            maxLength: 3,
                            size: 3,
                            onchange: t
                        }, {
                            name: "constrain",
                            type: "checkbox",
                            checked: !0,
                            text: "Constrain proportions"
                        }
                    ]
                }
            ],
            onSubmit: function(t) {
                var n = t.data;
                "" === n.width && delete n.width, "" === n.height && delete n.height, l ? r.setAttribs(l, n) : e.insertContent(r.createHTML("img", n))
            }
        })
    }
    e.addButton("image", {
        icon: "image",
        tooltip: "Insert/edit image",
        onclick: t,
        stateSelector: "img:not([data-mce-object])"
    }),
    e.addMenuItem("image", {
        icon: "image",
        text: "Insert image",
        onclick: t,
        context: "insert",
        prependToContext: !0
    })
});